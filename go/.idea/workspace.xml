<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e8b417e4-d9b2-4bef-af90-bb9215f3e3a7" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/../.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/../.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../README.md" beforeDir="false" afterPath="$PROJECT_DIR$/../README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../cli.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../requirements.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../terrarium" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/Cellar/go/1.17.6/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/hashicorp/terraform-exec@v0.15.0/tfexec/init.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/hashicorp/terraform-exec@v0.15.0/tfexec/terraform.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/hashicorp/terraform-exec@v0.15.0/tfexec/cmd_default.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="23dYpRoeBMvtGQhRG6qeXY4eOiV" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/example/stack" />
    <property name="settings.editor.selected.configurable" value="go.sdk" />
  </component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/lib" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/example/stack" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.github/workflows" />
      <recent name="$PROJECT_DIR$/example" />
      <recent name="$PROJECT_DIR$/stack" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test github.com/terrarium-tf/cli/cmd">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestInitCommand in github.com/terrarium-tf/cli/cmd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go" />
      <working_directory value="$PROJECT_DIR$/cmd" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/terrarium-tf/cli/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestInitCommand\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestInitCommandWithRemoteStateButNoLocking in github.com/terrarium-tf/cli/cmd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go" />
      <working_directory value="$PROJECT_DIR$/cmd" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/terrarium-tf/cli/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestInitCommandWithRemoteStateButNoLocking\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestInitCommandWithoutRemoteState in github.com/terrarium-tf/cli/cmd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go" />
      <working_directory value="$PROJECT_DIR$/cmd" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/terrarium-tf/cli/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestInitCommandWithoutRemoteState\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRemoveCommandWithVerbose in github.com/terrarium-tf/cli/cmd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go" />
      <working_directory value="$PROJECT_DIR$/cmd" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/terrarium-tf/cli/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestRemoveCommandWithVerbose\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="go" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/terrarium-tf/cli/cmd" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go" />
      <working_directory value="$PROJECT_DIR$/cmd" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/terrarium-tf/cli/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Test.go test github.com/terrarium-tf/cli/cmd" />
      <item itemvalue="Go Test.TestInitCommandWithoutRemoteState in github.com/terrarium-tf/cli/cmd" />
      <item itemvalue="Go Test.TestInitCommandWithRemoteStateButNoLocking in github.com/terrarium-tf/cli/cmd" />
      <item itemvalue="Go Test.TestInitCommand in github.com/terrarium-tf/cli/cmd" />
      <item itemvalue="Go Test.TestRemoveCommandWithVerbose in github.com/terrarium-tf/cli/cmd" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test github.com/terrarium-tf/cli/cmd" />
        <item itemvalue="Go Test.TestRemoveCommandWithVerbose in github.com/terrarium-tf/cli/cmd" />
        <item itemvalue="Go Test.TestInitCommandWithRemoteStateButNoLocking in github.com/terrarium-tf/cli/cmd" />
        <item itemvalue="Go Test.TestInitCommand in github.com/terrarium-tf/cli/cmd" />
        <item itemvalue="Go Test.TestInitCommandWithoutRemoteState in github.com/terrarium-tf/cli/cmd" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/go$go_test_github_com_terrarium_tf_cli_cmd.out" NAME="go test github.com/terrarium-tf/cli/cmd Coverage Results" MODIFIED="1645980760488" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>